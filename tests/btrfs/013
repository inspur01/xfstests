#! /bin/bash
# FS QA Test No. btrfs/013
#
# Regression test for balance with prealloc extents.  This checks to make sure
# we are balacing prealloc'ed extents properly by making sure we don't have any
# csum errors.  Unfortunately this manifests itself with no csum which means
# userspace doesn't get an error when reading the file back so we have to grok
# dmesg to see if there was a csum error.
#
#-----------------------------------------------------------------------
# Copyright (c) 2013 Fusion IO.  All Rights Reserved.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it would be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write the Free Software Foundation,
# Inc.,  51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#
#-----------------------------------------------------------------------
#

seq=`basename $0`
seqres=$RESULT_DIR/$seq
echo "QA output created by $seq"

here=`pwd`
tmp=/tmp/$$

status=1	# failure is the default!

_cleanup()
{
	rm -f $tmp.*
}

trap "_cleanup ; exit \$status" 0 1 2 3 15

# get standard environment, filters and checks
. ./common/rc
. ./common/filter

# real QA test starts here
_supported_fs btrfs
_supported_os Linux
_require_scratch

rm -f $seqres.full

_scratch_mkfs > /dev/null 2>&1
_scratch_mount

nr_csum_no_found=$(dmesg | grep -c "no csum found")
nr_csum_failed=$(dmesg | grep -c "csum failed")

_check_csum_error()
{
	new_csum_no_found=$(dmesg | grep -c "no csum found")
	new_csum_failed=$(dmesg | grep -c "csum failed")

	if [ $nr_csum_no_found -eq $new_csum_no_found -a \
	     $nr_csum_failed -eq $new_csum_failed ]; then
		return 0
	fi
	return 1
}
$XFS_IO_PROG -f -c "falloc 0 1M" -c "pwrite 16k 8k" -c "fsync" \
	$SCRATCH_MNT/foo > $seqres.full 2>&1
$BTRFS_UTIL_PROG filesystem balance $SCRATCH_MNT >> $seqres.full 2>&1 || \
	_fail "balance failed"
_scratch_unmount
_scratch_mount
$XFS_IO_PROG -c "pread 0 1M" $SCRATCH_MNT/foo >> $seqres.full 2>&1 || \
	_fail "pread failed"

# This sucks but unfortunately it is the only way to be sure something didn't go
# wrong.
_check_csum_error || _fail "csum detected, please check dmesg"

echo "Silence is golden"
status=0 ; exit
