#! /bin/bash
# FS QA Test 126
#
# Regression test for leaking data space after hitting EDQUOTA
#
#-----------------------------------------------------------------------
# Copyright (c) 2016 Fujitsu.  All Rights Reserved.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it would be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write the Free Software Foundation,
# Inc.,  51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#-----------------------------------------------------------------------
#

seq=`basename $0`
seqres=$RESULT_DIR/$seq
echo "QA output created by $seq"

here=`pwd`
tmp=/tmp/$$
status=1	# failure is the default!
trap "_cleanup; exit \$status" 0 1 2 3 15

_cleanup()
{
	cd /
	rm -f $tmp.*
}

# get standard environment, filters and checks
. ./common/rc
. ./common/filter

# remove previous $seqres.full before test
rm -f $seqres.full

# real QA test starts here

# Modify as appropriate.
_supported_fs btrfs
_supported_os Linux
_require_scratch

_scratch_mkfs
# Use enospc_debug mount option to trigger restrict space info check
_scratch_mount "-o enospc_debug"

_run_btrfs_util_prog quota enable $SCRATCH_MNT
_run_btrfs_util_prog quota rescan -w $SCRATCH_MNT
_run_btrfs_util_prog qgroup limit 512K 0/5 $SCRATCH_MNT

# The amount of written data may change due to different nodesize at mkfs time,
# so redirect stdout to seqres.full.
# Also, EDQUOTA is expected, which can't be redirected due to the limitation
# of _filter_xfs_io, so golden output will include EDQUOTA error message
_pwrite_byte 0xcdcdcdcd 0 1M $SCRATCH_MNT/test_file | _filter_xfs_io \
	>> $seqres.full

# Fstests will umount the fs, and at umount time, kernel warning will be
# triggered

# success, all done
status=0
exit
