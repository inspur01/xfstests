#! /bin/bash
# FS QA Test No. 009
#
# Test fallocate FALLOC_FL_ZERO_RANGE
#
#-----------------------------------------------------------------------
# Copyright 2014 (C) Red Hat, Inc., Lukas Czerner <lczerner@redhat.com>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it would be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write the Free Software Foundation,
# Inc.,  51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#
#-----------------------------------------------------------------------
#

seq=`basename $0`
seqres=$RESULT_DIR/$seq
echo "QA output created by $seq"

here=`pwd`
tmp=/tmp/$$
status=1	# failure is the default!

_cleanup()
{
    rm -f $tmp.*
}

trap "_cleanup ; exit \$status" 0 1 2 3 15

# get standard environment, filters and checks
. ./common/rc
. ./common/filter
. ./common/punch

# real QA test starts here
_supported_os Linux
_require_xfs_io_command "fzero"
_require_xfs_io_command "fiemap"
_require_xfs_io_command "falloc"
_require_test

testfile=$TEST_DIR/009.$$

# Disable extent zeroing for ext4 as that change where holes are created
if [ "$FSTYP" = "ext4" ]; then
	DEV=`_short_dev $TEST_DEV`
	echo 0 >/sys/fs/ext4/$DEV/extent_max_zeroout_kb
fi

# When PAGE_SIZE > 4096 xfs extent layout is different so it would not match
# the output.
if [ "$FSTYP" = "xfs" ]; then
	PAGE_SIZE=`getconf PAGE_SIZE`
	if [ $PAGE_SIZE -gt 4096 ]; then
		_notrun "Not supported on xfs with page size > 4096"
	fi
fi

# Standard zero range tests
_test_generic_punch falloc fzero fzero fiemap _filter_fiemap $testfile

# Delayed allocation zero range tests
_test_generic_punch -d falloc fzero fzero fiemap _filter_fiemap $testfile

# Multi zero range tests
_test_generic_punch -k falloc fzero fzero fiemap _filter_fiemap $testfile

# Delayed allocation multi zero range tests
_test_generic_punch -d -k falloc fzero fzero fiemap _filter_fiemap $testfile

status=0 ; exit
