#! /bin/bash
# FS QA Test No. 372
#
# Check that bmap/fiemap accurately report shared extents.
#
#-----------------------------------------------------------------------
# Copyright (c) 2016 Oracle, Inc.  All Rights Reserved.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it would be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write the Free Software Foundation,
# Inc.,  51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#-----------------------------------------------------------------------
#

seq=`basename $0`
seqres=$RESULT_DIR/$seq
echo "QA output created by $seq"

here=`pwd`
tmp=/tmp/$$
status=1	# failure is the default!
trap "_cleanup; exit \$status" 0 1 2 3 7 15

_cleanup()
{
	cd /
	rm -rf $tmp.*
	wait
}

# get standard environment, filters and checks
. ./common/rc
. ./common/filter
. ./common/reflink

# real QA test starts here
_supported_os Linux
_supported_fs generic
_require_scratch_reflink
_require_fiemap

echo "Format and mount"
_scratch_mkfs > $seqres.full 2>&1
_scratch_mount >> $seqres.full 2>&1

testdir=$SCRATCH_MNT/test-$seq
mkdir $testdir

blocks=5
blksz=65536
sz=$((blocks * blksz))

echo "Create the original files"
$XFS_IO_PROG -f -c "falloc 0 $sz" $testdir/file1 >> $seqres.full
_pwrite_byte 0x61 0 $sz $testdir/file1 >> $seqres.full
_scratch_cycle_mount

echo "file1 extents and holes"
_count_extents $testdir/file1
_count_holes $testdir/file1

_reflink_range $testdir/file1 $blksz $testdir/file2 $((blksz * 3)) $blksz >> $seqres.full
_reflink_range $testdir/file1 $((blksz * 3)) $testdir/file2 $blksz $blksz >> $seqres.full
_scratch_cycle_mount

echo "Compare files"
md5sum $testdir/file1 | _filter_scratch
md5sum $testdir/file2 | _filter_scratch

echo "file1 extents and holes"
_count_extents $testdir/file1
_count_holes $testdir/file1
echo "file2 extents and holes"
_count_extents $testdir/file2
_count_holes $testdir/file2
echo "file1 shared extents"
$XFS_IO_PROG -c 'fiemap -v' $testdir/file1 | awk '{print $5}' | grep -c '0x.*[2367aAbBfF]...$'

# success, all done
status=0
exit
