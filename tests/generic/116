#! /bin/bash
# FS QA Test No. 116
#
# Ensure that we can reflink parts of two identical files:
#   - Reflink identical parts of two identical files
#   - Check that we still have identical contents
#
#-----------------------------------------------------------------------
# Copyright (c) 2015, Oracle and/or its affiliates.  All Rights Reserved.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it would be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write the Free Software Foundation,
# Inc.,  51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#-----------------------------------------------------------------------

seq=`basename $0`
seqres=$RESULT_DIR/$seq
echo "QA output created by $seq"

here=`pwd`
tmp=/tmp/$$
status=1    # failure is the default!
trap "_cleanup; exit \$status" 0 1 2 3 15

_cleanup()
{
    cd /
    rm -rf $tmp.* $testdir
}

# get standard environment, filters and checks
. ./common/rc
. ./common/filter
. ./common/reflink

# real QA test starts here
_supported_os Linux
_require_test_reflink

rm -f $seqres.full

testdir=$TEST_DIR/test-$seq
rm -rf $testdir
mkdir $testdir

echo "Create the original files"
blksz=65536
_pwrite_byte 0x61 $((blksz * 2)) $((blksz * 6)) $testdir/file1 >> $seqres.full
_pwrite_byte 0x61 $((blksz * 2)) $((blksz * 6)) $testdir/file2 >> $seqres.full
_test_cycle_mount

md5sum $testdir/file1 | _filter_test_dir
md5sum $testdir/file2 | _filter_test_dir

_compare_range $testdir/file1 0 $testdir/file2 0 $((blksz * 8)) \
       || echo "Files do not match"

echo "Reflink the middle blocks together"
free_before=$(stat -f -c '%a' $testdir)
_reflink_range $testdir/file1 $((blksz * 4)) $testdir/file2 \
		$((blksz * 4)) $((blksz * 2)) >> $seqres.full
_test_cycle_mount
free_after=$(stat -f -c '%a' $testdir)
echo "freesp changed by $free_before -> $free_after" >> $seqres.full

echo "Compare sections"
md5sum $testdir/file1 | _filter_test_dir
md5sum $testdir/file2 | _filter_test_dir

_compare_range $testdir/file1 0 $testdir/file2 0 $((blksz * 4)) \
       || echo "Start sections do not match"

_compare_range $testdir/file1 $((blksz * 4)) $testdir/file2 \
		$((blksz * 4)) $((blksz * 2)) \
       || echo "Middle sections do not match"

_compare_range $testdir/file1 $((blksz * 6)) $testdir/file2 \
		$((blksz * 6)) $((blksz * 2)) \
       || echo "End sections do not match"

# success, all done
status=0
exit
