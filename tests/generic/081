#! /bin/bash
# FS QA Test No. 081
#
# Test I/O error path by fully filling an dm snapshot.
#
#-----------------------------------------------------------------------
# Copyright (c) 2015 Red Hat Inc. All Rights Reserved.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it would be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write the Free Software Foundation,
# Inc.,  51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#-----------------------------------------------------------------------
#

seq=`basename $0`
seqres=$RESULT_DIR/$seq
echo "QA output created by $seq"

here=`pwd`
tmp=/tmp/$$
status=1	# failure is the default!
trap "_cleanup; exit \$status" 0 1 2 3 15

_cleanup()
{
	cd /
	rm -f $tmp.*
	# lvm may have umounted it on I/O error, but in case it does not
	$UMOUNT_PROG $mnt >/dev/null 2>&1
	$LVM_PROG vgremove -f $vgname >>$seqres.full 2>&1
	$LVM_PROG pvremove -f $SCRATCH_DEV >>$seqres.full 2>&1
}

# get standard environment, filters and checks
. ./common/rc
. ./common/filter

# real QA test starts here
_supported_fs generic
_supported_os Linux
_require_test
_require_scratch_nocheck
_require_dm_target snapshot
_require_command $LVM_PROG lvm

echo "Silence is golden"
rm -f $seqres.full

vgname=vg_$seq
lvname=base_$seq
snapname=snap_$seq
mnt=$TEST_DIR/mnt_$seq
mkdir -p $mnt

# make sure there's enough disk space for 256M lv, test for 300M here in case
# lvm uses some space for metadata
_scratch_mkfs_sized $((300 * 1024 * 1024)) >>$seqres.full 2>&1
$LVM_PROG vgcreate -f $vgname $SCRATCH_DEV >>$seqres.full 2>&1
# We use yes pipe instead of 'lvcreate --yes' because old version of lvm
# (like 2.02.95 in RHEL6) don't support --yes option
yes | $LVM_PROG lvcreate -L 256M -n $lvname $vgname >>$seqres.full 2>&1
# wait for lvcreation to fully complete
$UDEV_SETTLE_PROG >>$seqres.full 2>&1

# _mkfs_dev exits the test on failure, this can make sure lv is created in
# above vgcreate/lvcreate steps
_mkfs_dev /dev/mapper/$vgname-$lvname

# create a 4M snapshot
$LVM_PROG lvcreate -s -L 4M -n $snapname $vgname/$lvname >>$seqres.full 2>&1 || \
	_fail "Failed to create snapshot"

_mount /dev/mapper/$vgname-$snapname $mnt

# write 5M data to the snapshot
$XFS_IO_PROG -fc "pwrite 0 5m" -c fsync $mnt/testfile >>$seqres.full 2>&1

# _check_dmesg will check for WARNINGs/BUGs in dmesg
status=0
exit
