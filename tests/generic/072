#! /bin/bash
# FS QA Test No. 072
#
# Test truncate/collapse range race.
# And this test is also a regression test for kernel commit 23fffa9,
#    fs: move falloc collapse range check into the filesystem methods
# If the race occurs, it will trigger a BUG_ON().
#
#-----------------------------------------------------------------------
# Copyright (c) 2015 Fujitsu.  All Rights Reserved.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it would be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write the Free Software Foundation,
# Inc.,  51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#-----------------------------------------------------------------------
#

seq=`basename $0`
seqres=$RESULT_DIR/$seq
echo "QA output created by $seq"

here=`pwd`
tmp=/tmp/$$
status=1	# failure is the default!

_cleanup()
{
	rm -f $tmp.*
}

trap "_cleanup; exit \$status" 0 1 2 3 15

# get standard environment, filters and checks
. ./common/rc
. ./common/filter

# real QA test starts here
_supported_os Linux
_supported_fs generic
_require_test
_require_xfs_io_command "fcollapse"

testfile=$TEST_DIR/testfile.$seq
NCPUS=`$here/src/feature -o`
# cap NCPUS to 8 at maximum to avoid long run time on hosts with many cpus
if [ $NCPUS -gt 8 ]; then
	NCPUS=8
fi
OUTER_LOOPS=$((10 * $NCPUS * $LOAD_FACTOR))
INNER_LOOPS=$((50 * $NCPUS * $LOAD_FACTOR))
# fcollapse/truncate continuously and simultaneously a same file
for ((i=1; i <= OUTER_LOOPS; i++)); do
	for ((i=1; i <= INNER_LOOPS; i++)); do
		$XFS_IO_PROG -f -c 'truncate 100k' \
			-c 'fcollapse 0 16k' $testfile > /dev/null 2>&1
	done &
	for ((i=1; i <= INNER_LOOPS; i++)); do
		$XFS_IO_PROG -f -c 'truncate 0' $testfile > /dev/null 2>&1
	done &
done
wait

echo "Silence is golden"
status=0
exit
