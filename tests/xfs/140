#! /bin/bash
# FS QA Test No. 140
#
# Try to ENOSPC while expanding the refcntbt by CoWing every other block
# of a file that eats the whole AG.
#
#-----------------------------------------------------------------------
# Copyright (c) 2015, Oracle and/or its affiliates.  All Rights Reserved.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it would be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write the Free Software Foundation,
# Inc.,  51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#-----------------------------------------------------------------------

seq=`basename $0`
seqres=$RESULT_DIR/$seq
echo "QA output created by $seq"

here=`pwd`
tmp=/tmp/$$
status=1    # failure is the default!
trap "_cleanup; exit \$status" 0 1 2 3 15

_cleanup()
{
    cd /
    rm -rf $tmp.* $testdir
}

# get standard environment, filters and checks
. ./common/rc
. ./common/filter
. ./common/reflink

# real QA test starts here
_supported_os Linux
_require_scratch_reflink
_require_cp_reflink

rm -f $seqres.full

echo "Format and mount"
_scratch_mkfs -d agsize=$((32 * 1048576)) > $seqres.full 2>&1
_scratch_mount >> $seqres.full 2>&1

testdir=$SCRATCH_MNT/test-$seq
mkdir $testdir
blksz=$(stat -f -c '%S' $testdir)

echo "Create the original files"
sz=$((48 * 1048576))
nr=$((sz / blksz))
_pwrite_byte 0x61 0 $sz $testdir/file1 >> $seqres.full
_cp_reflink $testdir/file1 $testdir/file2 >> $seqres.full
_pwrite_byte 0x61 0 $sz $testdir/file2.chk >> $seqres.full
_scratch_cycle_mount

echo "Compare files"
cmp -s $testdir/file1 $testdir/file2 || echo "file1 and file2 do not match"
cmp -s $testdir/file2 $testdir/file2.chk || echo "file2 and file2.chk do not match"

echo "CoW every other block"
seq 1 2 $((nr - 1)) | while read f; do
	_pwrite_byte 0x62 $((f * blksz)) $blksz $testdir/file2 >> $seqres.full
	_pwrite_byte 0x62 $((f * blksz)) $blksz $testdir/file2.chk >> $seqres.full
done
_scratch_cycle_mount

echo "Compare files"
! cmp -s $testdir/file1 $testdir/file2 || echo "file1 and file2 must not match"
cmp -s $testdir/file2 $testdir/file2.chk || echo "file2 and file2.chk do not match"

# success, all done
status=0
exit
