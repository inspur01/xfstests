#! /bin/bash
# FS QA Test No. 141
#
# Use the XFS log record CRC error injection mechanism to test torn writes to
# the log. The error injection mechanism writes an invalid CRC and shuts down
# the filesystem. The test verifies that a subsequent remount recovers the log
# and that the filesystem is consistent.
#
# Note that this test requires a DEBUG mode kernel.
#
#-----------------------------------------------------------------------
# Copyright (c) 2015 Red Hat, Inc. All Rights Reserved.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it would be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write the Free Software Foundation,
# Inc.,  51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#-----------------------------------------------------------------------
#

seq=`basename $0`
seqres=$RESULT_DIR/$seq
echo "QA output created by $seq"

here=`pwd`
tmp=/tmp/$$
status=1	# failure is the default!
trap "_cleanup; exit \$status" 0 1 2 3 15

_cleanup()
{
	cd /
	rm -f $tmp.*
	$KILLALL_PROG -9 fsstress > /dev/null 2>&1
	wait > /dev/null 2>&1
}

rm -f $seqres.full

# get standard environment, filters and checks
. ./common/rc

# real QA test starts here

# Modify as appropriate.
_supported_fs xfs
_supported_os Linux
_require_xfs_sysfs $(_short_dev $TEST_DEV)/log/log_badcrc_factor
_require_scratch
_require_command "$KILLALL_PROG" killall

echo "Silence is golden."

_scratch_mkfs >> $seqres.full 2>&1 || _fail "mkfs failed"
_scratch_mount

sdev=$(_short_dev $SCRATCH_DEV)

for i in $(seq 1 5); do
	# Enable error injection. Use a random bad crc factor up to 100
	# (increase this value to run fsstress longer).
	factor=$((RANDOM % 100 + 1))
	echo iteration $i log_badcrc_factor: $factor >> $seqres.full 2>&1
	echo $factor > /sys/fs/xfs/$sdev/log/log_badcrc_factor

	# Run fsstress until the filesystem shuts down. It will shut down
	# automatically when error injection triggers.
	$FSSTRESS_PROG -d $SCRATCH_MNT -p 4 -n 999999 >> $seqres.full 2>&1

	# Verify that we can remount the fs. Log recovery should handle the torn
	# write.
	_scratch_unmount
	_scratch_mount || _fail "failed to mount"
done

# success, all done
status=0
exit
